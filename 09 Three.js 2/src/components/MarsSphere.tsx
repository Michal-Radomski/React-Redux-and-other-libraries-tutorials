import React from "react";
import {GLTFLoader} from "three/examples/jsm/loaders/GLTFLoader";
import {useFrame, useLoader} from "@react-three/fiber";
import * as Three from "three";

const MarsSphere = (): JSX.Element => {
  const planet = React.useRef<Three.Mesh>(null!);

  const MarsNode = useLoader(GLTFLoader, "../Media/Mars_3D.glb");

  console.log("MarsNode:", MarsNode);

  useFrame(() => (planet.current.rotation.y += 0.0002));

  return (
    <React.Fragment>
      <mesh
        ref={planet}
        visible={true}
        position={[0, 0, 0]}
        geometry={MarsNode.Cube008.geometry}
        material={MarsNode.Cube008.material}
      />
    </React.Fragment>
  );
};

export default MarsSphere;

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

// import React, { useRef } from 'react'
// import { useGLTF } from '@react-three/drei'

// export default function Model(props) {
//   const group = useRef()
//   const { nodes, materials } = useGLTF('/Mars_3D.glb')
//   return (
//     <group ref={group} {...props} dispose={null}>
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Cube008.geometry}
//         material={materials['Default OBJ.005']}
//       />
//     </group>
//   )
// }

// useGLTF.preload('/Mars_3D.glb')

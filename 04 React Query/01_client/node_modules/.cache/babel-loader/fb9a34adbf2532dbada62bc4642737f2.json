{"ast":null,"code":"var _jsxFileName = \"/home/michalek/Dokumenty/git Repos/08 Libraries Tutorials/04 React Query/src/UserForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport * as api from \"./usersApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserForm = _ref => {\n  _s();\n\n  let {\n    user,\n    setIsEditing\n  } = _ref;\n  const [fields, setFields] = React.useState({ ...user\n  }); // console.log(\"user:\", user);\n  // console.log(\"setIsEditing:\", setIsEditing);\n\n  const queryClient = useQueryClient();\n  const {\n    isLoading,\n    mutate\n  } = useMutation(api.updateUser, {\n    onMutate: updatedUser => {\n      setIsEditing(false);\n    },\n    onSuccess: data => {\n      queryClient.setQueryData([\"user\"], user.id, data); // Trigger the old data to be updated\n      // queryClient.invalidateQueries([\"user\"], user.id);\n    }\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target; // console.log(\"name, value:\", name, value);\n\n    setFields({ ...fields,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"fields:\", fields);\n    mutate(fields);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Saving your changes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingTop: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          type: \"text\",\n          value: fields.name,\n          onChange: handleChange,\n          style: {\n            width: \"100%\",\n            marginBottom: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Details:\", \" \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"details\",\n          type: \"text\",\n          value: fields.details,\n          onChange: handleChange,\n          style: {\n            width: \"100%\",\n            marginBottom: \"20px\",\n            height: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserForm, \"3qyvIXcaT+HM5MYKwyAYSr+T5AE=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/home/michalek/Dokumenty/git Repos/08 Libraries Tutorials/04 React Query/src/UserForm.jsx"],"names":["React","useMutation","useQueryClient","api","UserForm","user","setIsEditing","fields","setFields","useState","queryClient","isLoading","mutate","updateUser","onMutate","updatedUser","onSuccess","data","setQueryData","id","handleChange","event","name","value","target","handleSubmit","preventDefault","console","log","paddingTop","width","marginBottom","details","height"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,cAArB,QAA0C,aAA1C;AAEA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;;;AAEA,MAAMC,QAAQ,GAAG,QAA0B;AAAA;;AAAA,MAAzB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAyB;AACzC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,KAAK,CAACS,QAAN,CAAe,EAAC,GAAGJ;AAAJ,GAAf,CAA5B,CADyC,CAEzC;AACA;;AACA,QAAMK,WAAW,GAAGR,cAAc,EAAlC;AAEA,QAAM;AAACS,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAsBX,WAAW,CAACE,GAAG,CAACU,UAAL,EAAiB;AACtDC,IAAAA,QAAQ,EAAGC,WAAD,IAAiB;AACzBT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHqD;AAItDU,IAAAA,SAAS,EAAGC,IAAD,IAAU;AACnBP,MAAAA,WAAW,CAACQ,YAAZ,CAAyB,CAAC,MAAD,CAAzB,EAAmCb,IAAI,CAACc,EAAxC,EAA4CF,IAA5C,EADmB,CAEnB;AACA;AACD;AARqD,GAAjB,CAAvC;;AAWA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B,CAD8B,CAE9B;;AACAhB,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAY,OAACe,IAAD,GAAQC;AAApB,KAAD,CAAT;AACD,GAJD;;AAMA,QAAME,YAAY,GAAIJ,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACK,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBrB,MAAvB;AACAK,IAAAA,MAAM,CAACL,MAAD,CAAN;AACD,GAJD;;AAMA,MAAII,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,KAAK,EAAE;AAACkB,MAAAA,UAAU,EAAE;AAAb,KAAZ;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACE;AAAA,4BACQ,GADR,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAElB,MAAM,CAACe,IAHhB;AAIE,UAAA,QAAQ,EAAEF,YAJZ;AAKE,UAAA,KAAK,EAAE;AAACU,YAAAA,KAAK,EAAE,MAAR;AAAgBC,YAAAA,YAAY,EAAE;AAA9B;AALT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,+BACW,GADX,eAEE;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAExB,MAAM,CAACyB,OAHhB;AAIE,UAAA,QAAQ,EAAEZ,YAJZ;AAKE,UAAA,KAAK,EAAE;AAACU,YAAAA,KAAK,EAAE,MAAR;AAAgBC,YAAAA,YAAY,EAAE,MAA9B;AAAsCE,YAAAA,MAAM,EAAE;AAA9C;AALT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA5DD;;GAAM7B,Q;UAIgBF,c,EAEQD,W;;;KANxBG,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nimport * as api from \"./usersApi\";\n\nconst UserForm = ({user, setIsEditing}) => {\n  const [fields, setFields] = React.useState({...user});\n  // console.log(\"user:\", user);\n  // console.log(\"setIsEditing:\", setIsEditing);\n  const queryClient = useQueryClient();\n\n  const {isLoading, mutate} = useMutation(api.updateUser, {\n    onMutate: (updatedUser) => {\n      setIsEditing(false);\n    },\n    onSuccess: (data) => {\n      queryClient.setQueryData([\"user\"], user.id, data);\n      // Trigger the old data to be updated\n      // queryClient.invalidateQueries([\"user\"], user.id);\n    },\n  });\n\n  const handleChange = (event) => {\n    const {name, value} = event.target;\n    // console.log(\"name, value:\", name, value);\n    setFields({...fields, [name]: value});\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"fields:\", fields);\n    mutate(fields);\n  };\n\n  if (isLoading) {\n    return <div>Saving your changes...</div>;\n  }\n\n  return (\n    <div style={{paddingTop: \"20px\"}}>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:{\" \"}\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={fields.name}\n            onChange={handleChange}\n            style={{width: \"100%\", marginBottom: \"20px\"}}\n          />\n        </label>\n        <label>\n          Details:{\" \"}\n          <textarea\n            name=\"details\"\n            type=\"text\"\n            value={fields.details}\n            onChange={handleChange}\n            style={{width: \"100%\", marginBottom: \"20px\", height: \"100px\"}}\n          />\n        </label>\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}